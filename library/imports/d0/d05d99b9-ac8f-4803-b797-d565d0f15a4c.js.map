{"version":3,"sources":["assets\\Scripts\\utils\\Singleton.ts"],"names":[],"mappings":";;;;;;AACA,SAAwB,SAAS;IAC7B;QAQI;YAEI,IAAG,CAAC,SAAS,CAAC,QAAQ,EACtB;gBACI,SAAS,CAAC,QAAQ,GAAG,IAAS,CAAC;aAClC;iBAED;gBACI,MAAS,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,4BAAyB,CAAC;aAC5E;QACL,CAAC;QAfD,sBAAW,qBAAQ;iBAAnB;gBAEI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAaL,gBAAC;IAAD,CAnBA,AAmBC,IAAA;IAED,OAAO,SAAS,CAAC;AACrB,CAAC;AAvBD,4BAuBC","file":"","sourceRoot":"/","sourcesContent":["\r\nexport default function Singleton<T>() {\r\n    class Singleton {\r\n        private static instance: T;\r\n\r\n        static get Instance(): T\r\n        {\r\n            return this.instance;\r\n        }\r\n\r\n        constructor()\r\n        {\r\n            if(!Singleton.instance)\r\n            {\r\n                Singleton.instance = this as T;\r\n            }\r\n            else\r\n            {\r\n                throw `${Singleton.instance.constructor['name']} instance already exist`;\r\n            }\r\n        }\r\n    }\r\n    \r\n    return Singleton;\r\n}"]}