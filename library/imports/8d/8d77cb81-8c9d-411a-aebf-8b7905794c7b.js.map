{"version":3,"sources":["assets\\Scripts\\PeerComponent\\QRCodeGen.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Global from \"../common/Global\";\r\nimport StageMgr from \"../stage/StageMgr\";\r\nimport Helper from \"../utils/Helper\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class QRCodeGen extends cc.Component {\r\n\r\n    @property(cc.Node) qrCode: cc.Node = null;\r\n    @property size: number = 100;\r\n    @property(cc.Node) loadingCover: cc.Node = null;\r\n\r\n    createQR(){\r\n        try {\r\n            let link = Helper.getControllerURL();\r\n            if(!link) {\r\n                throw console.error(\"Can't generate QR Code because controller url is \"+ link);\r\n            }\r\n            link += `&language=${window.language}`;\r\n            let div = document.createElement(\"div\");\r\n            let qrcode = new QRCode(div,{\r\n                text: link,\r\n                width: this.size,\r\n                height: this.size,\r\n                colorDark : \"#000000\",\r\n                colorLight : \"#ffffff\",\r\n                correctLevel : QRCode.CorrectLevel.L\r\n            });\r\n            let img: any = div.children[0];\r\n            setTimeout(() => {\r\n                this.loadingCover.active = false;\r\n                var texture = new cc.Texture2D();\r\n                texture.initWithElement(img);\r\n                texture.handleLoadedTexture();\r\n                var spriteFrame = new cc.SpriteFrame(texture);\r\n                var node = new cc.Node();\r\n                var sprite = node.addComponent(cc.Sprite);\r\n                sprite.spriteFrame = spriteFrame;\r\n                sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\r\n                this.qrCode.removeAllChildren();\r\n                this.qrCode.addChild(node);\r\n                node.width = this.size ;\r\n                node.height = this.size ;\r\n            }, 300);\r\n        } catch (error) {\r\n            if(Global.Instance.backAppTime - Date.now() < 0) {\r\n                StageMgr.Instance.sendMessage(\"backToApp\");\r\n                return;\r\n            }\r\n            setTimeout(()=>{\r\n                this.createQR(); \r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n    }\r\n}\r\n"]}