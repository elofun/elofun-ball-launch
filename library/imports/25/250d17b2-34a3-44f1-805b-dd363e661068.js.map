{"version":3,"sources":["assets\\Scripts\\gameplay\\LevelManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport SingletonNode from \"../utils/SingletonNode\";\r\nimport * as levelDesign from \"../gameplay/Level/GameplayLevelDesgin.js\";\r\nimport ObstaclesWallSpawner from \"./Wall/ObstaclesWallSpawner\";\r\nimport TimeNeedToTouch from \"./TimeNeedTouch\";\r\nimport GamePlayManager from \"./GamePlayManager\";\r\nimport Ball from \"./Ball\";\r\nimport FadeWall from \"./FadeWall\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelManager extends SingletonNode<LevelManager>() {\r\n  @property(cc.Node) public wall: cc.Node = null;\r\n  @property(cc.Node) public fadeWallHolder: cc.Node = null;\r\n  @property(cc.Node) public timeToBounceHolder: cc.Node = null;\r\n\r\n  @property(cc.Node) public ballHolder: cc.Node = null;\r\n  private _levelDesignKey = {\r\n    wall: \"wall\",\r\n    ballStartPos: \"ballStartPos\",\r\n    fadeWallHolder: \"fadeWall\",\r\n    obstaclesWall: \"obstaclesWall\",\r\n    timeToBounce: \"timeToBounce\",\r\n  };\r\n  SetUpLevel(levelIndex: number) {\r\n    const currentLevel = levelDesign[levelIndex];\r\n    console.log(\"levelIndex\", levelIndex);\r\n\r\n    console.log(\"currentLevel.level\", currentLevel.level);\r\n\r\n    this.wall.children.forEach((eachWall) => {\r\n      let tempWall = this.GetValueByKey(currentLevel[\"wall\"], eachWall.name);\r\n      eachWall.setPosition(tempWall.pos.x, tempWall.pos.y);\r\n      eachWall.width = tempWall.size.w;\r\n      eachWall.height = tempWall.size.h;\r\n      eachWall.getComponent(cc.PhysicsBoxCollider).size.height =\r\n        tempWall.size.h;\r\n      eachWall.getComponent(cc.PhysicsBoxCollider).size.width = tempWall.size.w;\r\n    });\r\n    this.ballHolder.setPosition(\r\n      currentLevel[this._levelDesignKey.ballStartPos].x,\r\n      currentLevel[this._levelDesignKey.ballStartPos].y\r\n    );\r\n    this.fadeWallHolder.setPosition(\r\n      currentLevel[this._levelDesignKey.fadeWallHolder].pos.x,\r\n      currentLevel[this._levelDesignKey.fadeWallHolder].pos.y\r\n    );\r\n    if (currentLevel[this._levelDesignKey.obstaclesWall].length > 0) {\r\n      for (\r\n        let index = 0;\r\n        index < currentLevel[this._levelDesignKey.obstaclesWall].length;\r\n        index++\r\n      ) {\r\n        let obstaclesWallPos: cc.Vec2 = new cc.Vec2(\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].pos.x,\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].pos.y\r\n        );\r\n        let obsWall: cc.Node = ObstaclesWallSpawner.Instance.SpawnThing(\r\n          obstaclesWallPos,\r\n          ObstaclesWallSpawner.Instance._wallPrefabName\r\n        );\r\n        obsWall.active = false;\r\n        obsWall.rotation =\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].rotation;\r\n        obsWall.width =\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].size.w;\r\n        obsWall.height =\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].size.h;\r\n        obsWall.getComponent(cc.PhysicsBoxCollider).size.width =\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].size.w;\r\n        obsWall.getComponent(cc.PhysicsBoxCollider).size.height =\r\n          currentLevel[this._levelDesignKey.obstaclesWall][index].size.h;\r\n        obsWall.active = true;\r\n      }\r\n    }\r\n    this.timeToBounceHolder\r\n      .getComponent(TimeNeedToTouch)\r\n      .setBounce(currentLevel[this._levelDesignKey.timeToBounce]);\r\n    this.fadeWallHolder.active = true;\r\n    this.ballHolder.active = true;\r\n    console.log(\r\n      \"this.fadeWallHolder\",\r\n      this.fadeWallHolder,\r\n      // this.fadeWallHolder.getPosition().x,\r\n      // this.fadeWallHolder.getPosition().y,\r\n      this.fadeWallHolder.getChildByName(\"FadeAbleWall\").scale,\r\n      this.fadeWallHolder.getChildByName(\"FadeAbleWall\").getPosition().x,\r\n      this.fadeWallHolder.getChildByName(\"FadeAbleWall\").getPosition().y\r\n    );\r\n  }\r\n  DisableHolder() {\r\n    console.log(\"RESET\");\r\n    ObstaclesWallSpawner.Instance.ClearHolder();\r\n    this.ballHolder.getComponent(Ball).Reset();\r\n    this.fadeWallHolder.getComponentInChildren(FadeWall).Reset();\r\n    this.ballHolder.active = false;\r\n  }\r\n  NextLevel() {\r\n    GamePlayManager.Instance.currentLevel =\r\n      GamePlayManager.Instance.currentLevel + 1;\r\n    this.SetUpLevel(GamePlayManager.Instance.currentLevel);\r\n  }\r\n  GetValueByKey(objectInput, keyToFind: string) {\r\n    for (const key in objectInput) {\r\n      if (Object.prototype.hasOwnProperty.call(objectInput, key)) {\r\n        const element = objectInput[key];\r\n        if (keyToFind.toLowerCase() == key.toLowerCase()) {\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}