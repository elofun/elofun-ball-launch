{"version":3,"sources":["assets\\Scripts\\stage\\StageInGame.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Stage from \"./Stage\";\r\nimport StageGameEnd from \"./StageGameEnd\";\r\nimport playGround from \"../playGround\";\r\nimport PeerManager, { IDataReceived } from \"../PeerComponent/PeerManager\";\r\nimport PeerAction from \"../PeerComponent/PeerAction\";\r\nimport { PeerActionType, PeerPhase } from \"../PeerComponent/PeerDefine\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class StageInGame extends Stage {\r\n\r\n    @property(cc.Prefab) playGround: cc.Prefab = null;\r\n    @property(cc.Node) container: cc.Node = null;\r\n    @property(cc.Node) playerAvatar: cc.Node[] = [];\r\n    @property(cc.SpriteFrame) playerRankSpriteFrames: cc.SpriteFrame[] = [];\r\n    @property(cc.Material) normalSprite: cc.Material = null;\r\n    @property(cc.Material) graySprite: cc.Material = null;\r\n    @property(cc.Node) tutorialPopup: cc.Node = null;\r\n    @property(cc.Label) lblTimer: cc.Label = null;\r\n    @property(cc.SpriteFrame) bgSpriteFrames: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame) roadSpriteFrames: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame) objectsSpriteFrame1: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame) objectsSpriteFrame2: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame) objectsSpriteFrame3: cc.SpriteFrame[] = [];\r\n\r\n    static Instance: StageInGame = null;\r\n\r\n    public isDead: boolean[] = [];\r\n    public isGameOver: boolean[] = [];\r\n    public playerScore: number[] = [];\r\n    private avatarPositionY: number[] = [50, -125, -300];\r\n    private connectedPlayerIndex: number[] = [];\r\n    private rankUpdateInterval = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        StageInGame.Instance = this;\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    }\r\n\r\n    initial() {\r\n        for (let child of this.container.children) {\r\n            if (child.getComponent(PeerAction)) {\r\n                child.getComponent(PeerAction).playerSIP = -1;\r\n            }\r\n        }\r\n        this.container.removeAllChildren();\r\n\r\n        this.connectedPlayerIndex = [];\r\n\r\n        let bgIndexArr = [0, 1, 2];\r\n        this.shuffleArray(bgIndexArr);\r\n\r\n        let count = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            this.playerAvatar[i].getComponent(cc.Sprite).setMaterial(0, this.normalSprite);\r\n            this.playerAvatar[i].active = PeerManager.Instance.clientConnected[i] ? true : false;\r\n            if (PeerManager.Instance.clientConnected[i]) {\r\n                count++;\r\n                let playground = cc.instantiate(this.playGround);\r\n                playground.getComponent(playGround).playerIndex = i;\r\n                playground.getComponent(PeerAction).playerSIP = PeerManager.Instance.clientConnected[i].remoteSIP;\r\n                playground.getComponent(playGround).bgSpriteFrame = this.bgSpriteFrames[bgIndexArr[i]];\r\n                playground.getComponent(playGround).roadSpriteFrame = this.roadSpriteFrames[bgIndexArr[i]];\r\n                playground.getComponent(playGround).objectsSpriteFrame = bgIndexArr[i] == 0\r\n                    ? this.objectsSpriteFrame1 : bgIndexArr[i] == 1\r\n                        ? this.objectsSpriteFrame2\r\n                        : this.objectsSpriteFrame3;\r\n                playground.parent = this.container;\r\n                this.isGameOver[i] = false;\r\n                this.isDead[i] = false;\r\n                this.playerScore[i] = 0;\r\n                this.connectedPlayerIndex.push(i);\r\n            }\r\n        }\r\n\r\n        this.rankUpdateInterval = setInterval(() => {\r\n            this.updateRank();\r\n        }, 2000)\r\n\r\n        this.lblTimer.string = \"5\";\r\n        setTimeout(() => {\r\n            cc.tween(this.tutorialPopup).to(0.3, { scale: 0.5, }, { easing: \"quadOut\" }).start();\r\n            let time = 5;\r\n            let interval = setInterval(() => {\r\n                this.lblTimer.string = (--time).toString();\r\n                cc.tween(this.lblTimer.node).to(0.1, { scale: 1.5 }).to(0.1, { scale: 1 }).start();\r\n                if (time <= 0) {\r\n                    clearInterval(interval);\r\n                    cc.tween(this.tutorialPopup).to(0.3, { scale: 0, }, { easing: \"quadIn\" }).call(() => {\r\n                        this.container.children.forEach((e) => {\r\n                            e.getComponent(playGround).startMoveBall();\r\n                        })\r\n                    }).start();\r\n                }\r\n            }, 1000)\r\n        }, 500)\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    showConnectMessage(index: number, disconnectMessage: string = null) {\r\n        if (!this.container.children[index]) return;\r\n        this.container.children[index].getComponent(playGround).showMessagePlayerDisconnect(disconnectMessage);\r\n    }\r\n\r\n    setGameOver(index: number, isDead: boolean = true) {\r\n        this.isGameOver[index] = true;\r\n        if (isDead) {\r\n            this.isDead[index] = true;\r\n            this.playerAvatar[index].getComponent(cc.Sprite).setMaterial(0, this.graySprite);\r\n        }\r\n\r\n        if (this.isGameOver.every((e) => { return e == true })) {\r\n            clearInterval(this.rankUpdateInterval);\r\n\r\n            for (let child of this.container.children) {\r\n                if (child.getComponent(PeerAction)) {\r\n                    child.getComponent(PeerAction).playerSIP = -1;\r\n                }\r\n            }\r\n            this.container.removeAllChildren();\r\n\r\n            let rank = this.getPlayerRank();\r\n            if (PeerManager.Instance.getClientConneted().length > 0) {\r\n                StageGameEnd.Instance.showResult(rank);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateRank() {\r\n        let rank = this.getPlayerRank();\r\n\r\n        for (let i = 0; i < rank.length; i++) {\r\n            cc.tween(this.playerAvatar[rank[i].playerIndex]).to(0.5, { y: this.avatarPositionY[i] }).start();\r\n            this.playerAvatar[rank[i].playerIndex].getChildByName(\"rank\")\r\n                .getComponent(cc.Sprite).spriteFrame = this.playerRankSpriteFrames[i];\r\n        }\r\n    }\r\n\r\n    getPlayerRank() {\r\n        let rank = [];\r\n        for (let i = 0; i < this.connectedPlayerIndex.length; i++) {\r\n            rank[i] = {\r\n                score: this.playerScore[this.connectedPlayerIndex[i]],\r\n                playerIndex: this.connectedPlayerIndex[i],\r\n            }\r\n        }\r\n\r\n        rank.sort((a, b) => {\r\n            return b.score - a.score;\r\n        })\r\n\r\n        return rank;\r\n    }\r\n}\r\n"]}