{"version":3,"sources":["assets\\Scripts\\PeerComponent\\PeerManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameDefine from \"../game/GameDefine\";\r\nimport StageInGame from \"../stage/StageInGame\";\r\nimport StageLobby from \"../stage/StageLobby\";\r\nimport StageMgr, { Stages } from \"../stage/StageMgr\";\r\nimport StageQRscan from \"../stage/StageQRscan\";\r\nimport PeerDefine, {\r\n  PeerActionConnect,\r\n  PeerActionType,\r\n  PeerPhase,\r\n  PeerStage,\r\n} from \"./PeerDefine\";\r\n\r\nexport interface IDataReceived {\r\n  phase: PeerPhase;\r\n  action: PeerActionType | PeerActionConnect;\r\n  customParam: string;\r\n  currentID?: number;\r\n  currentClientID?: number;\r\n  currentMainPlayerID?: number;\r\n  currentStage?: PeerStage;\r\n  rank?: number;\r\n  score?: number;\r\n}\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PeerManager extends cc.Component {\r\n  public static Instance: PeerManager = null;\r\n\r\n  static EventReceivedMessage = \"ReceivedMessage\";\r\n  static EventSwitchMainPlayer = \"SwitchMainPlayer\";\r\n  static registerEvent(name: string, callback: Function) {\r\n    this.Instance.node.on(name, callback);\r\n  }\r\n\r\n  static emit(name: string, ...args) {\r\n    this.Instance.node.emit(name, ...args);\r\n  }\r\n\r\n  public peer: any = null;\r\n  public sip: number = 0;\r\n  public clientConnected: any = new Array(PeerDefine.MAX_CLIENT);\r\n  public arrDisconnectCB: Array<Function> = new Array(PeerDefine.MAX_CLIENT);\r\n  public arrConnectedCB: Array<Function> = new Array(PeerDefine.MAX_CLIENT);\r\n  public onmessage: Function = null;\r\n  public isPlayWithRemote: boolean = true;\r\n\r\n  public isInitalized = false;\r\n  private isScriptLoaded = false;\r\n  private timeoutPingPong: any = [];\r\n  public currentMainPlayer: number = -1;\r\n  private isPlayingGame: boolean = false;\r\n\r\n  private veryfiSIPs: number[];\r\n\r\n  loadScript(moduleName, cb) {\r\n    function scriptLoaded() {\r\n      document.body.removeChild(domScript);\r\n      domScript.removeEventListener(\"load\", scriptLoaded, false);\r\n      cb && cb();\r\n    }\r\n    var domScript = document.createElement(\"script\");\r\n    domScript.async = true;\r\n    domScript.src = moduleName;\r\n    domScript.addEventListener(\"load\", scriptLoaded, false);\r\n    document.body.appendChild(domScript);\r\n  }\r\n  onLoad() {\r\n    PeerManager.Instance = this;\r\n\r\n    return;\r\n    if (!window.isRelease) {\r\n      this.loadScript(\"https://fpt.eloplay.vn/peer/peerclient.js\", () => {\r\n        this.isScriptLoaded = true;\r\n      });\r\n    } else {\r\n      this.isScriptLoaded = true;\r\n    }\r\n\r\n    let getPeerInterval = setInterval(() => {\r\n      if (this.isInitalized || !this.isScriptLoaded) return;\r\n      if (!this.peer && (window as any).getPeerClient) {\r\n        this.peer = (window as any).getPeerClient();\r\n        console.log(this.peer);\r\n      } else if (this.peer && !this.sip) {\r\n        this.sip = this.peer.getSIP();\r\n      } else if (this.peer && this.sip && !this.isInitalized) {\r\n        this.init();\r\n        clearInterval(getPeerInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n  start() {\r\n    return;\r\n    this.clientConnected = new Array(PeerDefine.MAX_CLIENT);\r\n    this.veryfiSIPs = new Array(PeerDefine.MAX_CLIENT);\r\n  }\r\n  getSIP() {\r\n    return this.sip;\r\n  }\r\n\r\n  update(dt) {}\r\n  getClients() {\r\n    return this.clientConnected;\r\n  }\r\n  setRemoteMode(val: boolean = false) {\r\n    if (val) {\r\n      this.clientConnected[0] = { remoteSIP: 0 };\r\n    } else {\r\n      this.clientConnected[0] = null;\r\n    }\r\n    this.isPlayWithRemote = val;\r\n  }\r\n  getClientConneted() {\r\n    let arr = [];\r\n    for (let client of this.clientConnected) {\r\n      if (client || (this.isPlayWithRemote && client == true)) {\r\n        arr.push(client);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n  setConnectedCB(\r\n    clientId: number,\r\n    cb: Function // client ID will be from 0\r\n  ) {\r\n    if (clientId < PeerDefine.MAX_CLIENT) {\r\n      this.arrConnectedCB[clientId] = cb;\r\n    }\r\n  }\r\n  setDisConnectCB(clientId: number, cb: Function) {\r\n    if (clientId < PeerDefine.MAX_CLIENT) {\r\n      this.arrDisconnectCB[clientId] = cb;\r\n    }\r\n  }\r\n  PlayGame(value = true) {\r\n    this.isPlayingGame = value;\r\n  }\r\n  init() {\r\n    this.isInitalized = true;\r\n    this.peer.on(\"message\", this.onRecievedMessage.bind(this));\r\n    console.log(this.sip);\r\n  }\r\n  setMessageRecivedCB(cb: Function) {\r\n    this.onmessage = cb;\r\n  }\r\n  connecting(client) {\r\n    let indexAvl = this.getSlotAvailble();\r\n    if (indexAvl < 0) {\r\n      let msgFail: IDataReceived = {\r\n        action: PeerActionConnect.CONNECT_FAILED,\r\n        phase: PeerPhase.CONNECT,\r\n        customParam: \"Connection failed - full slot\",\r\n      };\r\n      client.send(JSON.stringify(msgFail));\r\n      return;\r\n    }\r\n    if (this.isPlayingGame) {\r\n      let msgFail: IDataReceived = {\r\n        action: PeerActionConnect.CONNECT_FAILED,\r\n        phase: PeerPhase.CONNECT,\r\n        customParam: \"game is playing\",\r\n      };\r\n      client.send(JSON.stringify(msgFail));\r\n      return;\r\n    }\r\n    if (this.currentMainPlayer == -1) {\r\n      this.currentMainPlayer = indexAvl;\r\n    }\r\n    if (this.isPlayWithRemote) this.currentMainPlayer = 0;\r\n    let msgConnected: IDataReceived = {\r\n      action: PeerActionConnect.CONNECTED,\r\n      phase: PeerPhase.CONNECT,\r\n      customParam:\r\n        indexAvl == this.currentMainPlayer\r\n          ? !this.isPlayWithRemote\r\n            ? \"mainPlayer\"\r\n            : \"Connection success\"\r\n          : \"Connection success\",\r\n      currentID: indexAvl,\r\n      currentMainPlayerID: this.currentMainPlayer,\r\n    };\r\n\r\n    if (this.getClientConneted().length == 0) {\r\n      StageMgr.show(Stages.StageStartGame);\r\n      this.setRemoteMode(false);\r\n\r\n      let msg: IDataReceived = {\r\n        phase: PeerPhase.START_SCREEN,\r\n        action: PeerActionType.SHOW,\r\n        customParam: \"\",\r\n      };\r\n\r\n      client.send(JSON.stringify(msg));\r\n    }\r\n\r\n    this.arrConnectedCB[indexAvl] && this.arrConnectedCB[indexAvl]();\r\n    client.send(JSON.stringify(msgConnected));\r\n    this.clientConnected[indexAvl] = client;\r\n    this.veryfiSIPs[indexAvl] = client.remoteSIP;\r\n\r\n    StageLobby.Instance.setUI(true, indexAvl);\r\n  }\r\n  onRecievedMessage(msg, client) {\r\n    //need to verfify client here\r\n    let args = JSON.parse(msg);\r\n    if (args.phase != PeerPhase.CONNECT) {\r\n      console.log(msg);\r\n    }\r\n    if (args.phase == PeerPhase.CONNECT) {\r\n      switch (args.action) {\r\n        case PeerActionConnect.CONNECTING: {\r\n          this.connecting(client);\r\n          return;\r\n        }\r\n        case PeerActionConnect.PING_PONG: {\r\n          this.updatePingPong(client, args);\r\n          return;\r\n        }\r\n        case PeerActionConnect.CONNECT_RETRY: {\r\n          if (this.isPlayingGame) {\r\n            console.log(\"reconnect :\" + client.remoteSIP);\r\n            let veryfiSIP = client.remoteSIP;\r\n            let check = this.veryfiSIPs.includes(veryfiSIP);\r\n            console.log(check, veryfiSIP, this.veryfiSIPs);\r\n            if (check) {\r\n              let indexAvl = this.veryfiSIPs.indexOf(veryfiSIP);\r\n\r\n              this.arrConnectedCB[indexAvl] && this.arrConnectedCB[indexAvl]();\r\n              this.clientConnected[indexAvl] = client;\r\n              this.veryfiSIPs[indexAvl] = client.remoteSIP;\r\n\r\n              let msgSuccess: IDataReceived = {\r\n                action: PeerActionConnect.CONNECT_RETRY_SUCCESS,\r\n                phase: PeerPhase.CONNECT,\r\n                currentID: indexAvl,\r\n                currentMainPlayerID: this.currentMainPlayer,\r\n                customParam: \"reconnect success\",\r\n                currentStage: PeerStage.PLAYING,\r\n              };\r\n              client.send(JSON.stringify(msgSuccess));\r\n\r\n              StageInGame.Instance.isGameOver[indexAvl] =\r\n                StageInGame.Instance.isDead[indexAvl];\r\n            } else {\r\n              let msgFail: IDataReceived = {\r\n                action: PeerActionConnect.CONNECT_FAILED,\r\n                phase: PeerPhase.CONNECT,\r\n                customParam: \"cannot connect, not current player\",\r\n              };\r\n              client.send(JSON.stringify(msgFail));\r\n            }\r\n          } else {\r\n            this.connecting(client);\r\n          }\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    PeerManager.emit(PeerManager.EventReceivedMessage, args, client);\r\n    this.onmessage && this.onmessage(msg);\r\n  }\r\n  getSlotAvailble() {\r\n    for (let i = 0; i < this.clientConnected.length; i++) {\r\n      if (!this.clientConnected[i]) return i;\r\n    }\r\n    return -1;\r\n  }\r\n  getRemoteSIPAvailable(remoteSIP: number) {\r\n    for (let i = 0; i < this.clientConnected.length; i++) {\r\n      if (\r\n        this.clientConnected[i] &&\r\n        this.clientConnected[i].remoteSIP == remoteSIP\r\n      )\r\n        return i;\r\n    }\r\n    return -1;\r\n  }\r\n  updatePingPong(client, msg) {\r\n    let id = this.getRemoteSIPAvailable(client.remoteSIP);\r\n    if (id < 0) return;\r\n    if (this.timeoutPingPong[id]) clearTimeout(this.timeoutPingPong[id]);\r\n\r\n    this.sendMessage(id, msg);\r\n\r\n    this.timeoutPingPong[id] = setTimeout(() => {\r\n      this.arrDisconnectCB[id] && this.arrDisconnectCB[id]();\r\n      clearTimeout(this.timeoutPingPong[id]);\r\n      this.clientConnected[id] = null;\r\n\r\n      StageLobby.Instance.setUI(false, id);\r\n      if (StageInGame.Instance.node.active) {\r\n        setTimeout(() => {\r\n          if (!this.clientConnected[id]) {\r\n            let str = `Người chơi ${id + 1} đã mất kết nối`;\r\n            StageInGame.Instance.showConnectMessage(id, str);\r\n          }\r\n        }, PeerDefine.TIMEOUT_RETRY);\r\n        if (id != this.currentMainPlayer) {\r\n        }\r\n      }\r\n\r\n      if (this.isPlayWithRemote) return;\r\n      if (id == this.currentMainPlayer) {\r\n        this.currentMainPlayer = -1;\r\n        if (this.getClientConneted().length > 0) {\r\n          //set Main player here\r\n          let e = this.switchMainPlayer(id);\r\n          if (e) {\r\n          } else {\r\n          }\r\n        } else {\r\n          StageMgr.show(Stages.StageQRscan);\r\n          this.isPlayWithRemote = true;\r\n          this.isPlayingGame = false;\r\n        }\r\n      }\r\n    }, PeerDefine.TIMEOUT_DISCONNECT);\r\n  }\r\n  switchMainPlayer(previousMainPlayer) {\r\n    for (let client of this.clientConnected) {\r\n      if (client) {\r\n        this.currentMainPlayer = this.clientConnected.indexOf(client);\r\n        let msgConnected: IDataReceived = {\r\n          action: PeerActionConnect.SWITCH_MAINPLAYER,\r\n          phase: PeerPhase.CONNECT,\r\n          customParam: \"mainPlayer\",\r\n          currentMainPlayerID: this.currentMainPlayer,\r\n        };\r\n        this.sendMessageToAll(msgConnected);\r\n\r\n        let str = `${GameDefine.player} ${previousMainPlayer + 1} ${\r\n          GameDefine.hasdisconnect\r\n        } \\n${GameDefine.player} ${this.currentMainPlayer + 1} ${\r\n          GameDefine.hosting\r\n        }`;\r\n        StageInGame.Instance.showConnectMessage(previousMainPlayer, str);\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  sendMessage(clientIndex, msg: IDataReceived) {\r\n    if (!this.peer) return;\r\n    let client = this.clientConnected[clientIndex];\r\n    if (client) {\r\n      this.peer.sendTo(client.remoteSIP, JSON.stringify(msg));\r\n    }\r\n  }\r\n  sendMessageToAll(msg: IDataReceived) {\r\n    if (!this.peer) return;\r\n    for (let client of this.clientConnected) {\r\n      if (client) this.peer.sendTo(client.remoteSIP, JSON.stringify(msg));\r\n    }\r\n  }\r\n}\r\n"]}